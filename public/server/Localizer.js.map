{"version":3,"sources":["../../src/server/Localizer.es6"],"names":["pjson","require","scanner","uuid","http","fs","request","Localizer","id","v4","oldUUID","readFileSync","e","writeFileSync","scan","err","networks","console","error","rows","map","net","ap_id","mac","value","rssi","log","data","action","fp_id","ap_ids","device_id","type","url","json","method","body","res","setTimeout","start","l"],"mappings":";;;;;;AAAA,IAAMA,QAAQC,QAAQ,oBAAR,CAAd;AACA,IAAMC,UAAUD,QAAQ,mBAAR,CAAhB;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,IAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,IAAMI,KAAKJ,QAAQ,IAAR,CAAX;AACA,IAAMK,UAAUL,QAAQ,SAAR,CAAhB;;IAEMM,S;AACF,yBAAa;AAAA;;AACT,aAAKC,EAAL,GAAUL,KAAKM,EAAL,EAAV;AACA,YAAI;AACA,gBAAIC,UAAUL,GAAGM,YAAH,CAAgB,OAAhB,EAAyB,MAAzB,CAAd;AACA,iBAAKH,EAAL,GAAUE,OAAV;AACH,SAHD,CAGC,OAAME,CAAN,EAAQ;AACLP,eAAGQ,aAAH,CAAiB,OAAjB,EAA0B,KAAKL,EAA/B;AACH;AACJ;;;;gCAEM;AAAA;;AACHN,oBAAQY,IAAR,CAAa,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC5B,oBAAID,GAAJ,EAAS;AACLE,4BAAQC,KAAR,CAAcH,GAAd;AACA;AACH;;AAED,oBAAMI,OAAOH,SAASI,GAAT,CAAa,UAACC,GAAD,EAAS;AAC/B,2BAAO,EAACC,OAAOD,IAAIE,GAAZ,EAAiBC,OAAOH,IAAII,IAA5B,EAAP;AACH,iBAFY,CAAb;;AAIAR,wBAAQS,GAAR,CAAYP,IAAZ;;AAEA,oBAAMQ,OAAO;AACTC,4BAAQ,QADC;AAETC,2BAAO,kCAFE;AAGTC,4BAAQX,IAHC;AAITY,+BAAW,MAAKvB,EAJP;AAKTwB,0BAAM;AALG,iBAAb;;AAQAf,wBAAQS,GAAR,CAAYC,IAAZ;AACArB,wBAAQ;AACJ2B,yBAAK,qCADD;AAEJC,0BAAM,IAFF;AAGJC,4BAAQ,MAHJ;AAIJC,0BAAMT;AAJF,iBAAR,EAKG,UAACT,KAAD,EAAQmB,GAAR,EAAaD,IAAb,EAAsB;AACrBnB,4BAAQS,GAAR,CAAYR,KAAZ,EAAmBmB,GAAnB,EAAwBD,IAAxB;AACAE,+BAAW,YAAK;AACZ,8BAAKC,KAAL;AACH,qBAFD,EAEG,IAFH;AAGH,iBAVD;AAWH,aAhCD;AAiCH;;;;;;AAGL,IAAMC,IAAI,IAAIjC,SAAJ,EAAV;AACAiC,EAAED,KAAF","file":"Localizer.js","sourcesContent":["const pjson = require('../../package.json');\nconst scanner = require('node-wifi-scanner');\nconst uuid = require('uuid');\nconst http = require('http');\nconst fs = require('fs');\nconst request = require('request');\n\nclass Localizer {\n    constructor(){\n        this.id = uuid.v4();\n        try {\n            let oldUUID = fs.readFileSync(\".uuid\", \"utf8\");\n            this.id = oldUUID;\n        }catch(e){\n            fs.writeFileSync(\".uuid\", this.id);\n        }\n    }\n\n    start(){\n        scanner.scan((err, networks) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n\n            const rows = networks.map((net) => {\n                return {ap_id: net.mac, value: net.rssi};\n            });\n\n            console.log(rows);\n\n            const data = {\n                action: \"action\",\n                fp_id: \"336c6582c283421c28479e8801e8edfa\",\n                ap_ids: rows,\n                device_id: this.id,\n                type: \"COMPUTER\"\n            };\n\n            console.log(data);\n            request({\n                url: 'http://localhost:8888/rest/localize',\n                json: true,\n                method: \"POST\",\n                body: data\n            }, (error, res, body) => {\n                console.log(error, res, body);\n                setTimeout(()=> {\n                    this.start();\n                }, 2000);\n            });\n        });\n    }\n}\n\nconst l = new Localizer();\nl.start();"]}