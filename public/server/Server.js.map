{"version":3,"sources":["../../src/server/Server.es6"],"names":["numCPUs","require","cpus","length","debug","process","execArgv","indexOf","cluster","Server","numWorker","workers","isMaster","runtMainWorker","on","message","onMainMessage","i","w","fork","onWorkerMessage","push","run","console","log","upnp","startBroadcast","rest","createServer","socket","getLog","getServer","startServer","listen"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AACA,IAAMA,UAAUC,QAAQ,IAAR,EAAcC,IAAd,GAAqBC,MAArC;AACA,IAAMC,QAAQC,QAAQC,QAAR,CAAiBC,OAAjB,CAAyB,SAAzB,IAAsC,CAAC,CAAvC,IAA4CF,QAAQC,QAAR,CAAiBC,OAAjB,CAAyB,aAAzB,IAA0C,CAAC,CAArG;AACA,IAAMC,UAAUP,QAAQ,SAAR,CAAhB;;IAEMQ,M;AAEF,oBAAYC,SAAZ,EAA+BN,KAA/B,EAA+C;AAAA;;AAAA;;AAC3C,aAAKA,KAAL,GAAaA,KAAb;AACA,aAAKO,OAAL,GAAe,EAAf;AACA,YAAIH,QAAQI,QAAR,IAAoB,CAACR,KAAzB,EAAgC;AAC5B,iBAAKS,cAAL;;AAEAR,oBAAQS,EAAR,CAAW,SAAX,EAAsB,UAACC,OAAD,EAAa;AAC/B,sBAAKC,aAAL,CAAmBD,OAAnB;AACH,aAFD;;AAIA,iBAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIP,SAApB,EAA+BO,GAA/B,EAAoC;AAChC,oBAAIC,IAAIV,QAAQW,IAAR,EAAR;;AAEAD,kBAAEJ,EAAF,CAAK,SAAL,EAAgB,UAACC,OAAD,EAAa;AACzB,0BAAKK,eAAL,CAAqBL,OAArB;AACH,iBAFD;;AAIA,qBAAKJ,OAAL,CAAaU,IAAb,CAAkBH,CAAlB;AACH;AACJ,SAhBD,MAgBM;AACF,iBAAKI,GAAL;AACH;AACJ;;;;sCAEaP,O,EAAS;AACnBQ,oBAAQC,GAAR,CAAYT,OAAZ;AACH;;;wCAEeA,O,EAAS;AACrBQ,oBAAQC,GAAR,CAAYT,OAAZ;AACH;;;yCAEe;AACZ,gBAAMU,OAAO,oBAAb;AACAA,iBAAKC,cAAL;;AAEA,gBAAMC,OAAO,0BAAb;AACAA,iBAAKC,YAAL;;AAEA,gBAAMC,SAAS,8BAAoBF,KAAKG,MAAL,EAApB,EAAmCH,KAAKI,SAAL,EAAnC,CAAf;AACAF,mBAAOG,WAAP;;AAEA,mBAAOL,IAAP;AACH;;;8BAEK;AACF,gBAAMA,OAAO,0BAAb;AACAA,iBAAKC,YAAL;AACAD,iBAAKM,MAAL,CAAY,IAAZ;AACH;;;;;;AAGL,IAAIxB,MAAJ,CAAWT,OAAX,EAAoBI,KAApB","file":"Server.js","sourcesContent":["import Ssdp from './Ssdp';\nimport RestServer from './RestServer';\nimport WebSocketServer from './WebSocketServer';\nconst numCPUs = require('os').cpus().length;\nconst debug = process.execArgv.indexOf('--debug') > -1 || process.execArgv.indexOf('--debug-brk') > -1;\nconst cluster = require('cluster');\n\nclass Server {\n\n    constructor(numWorker: Number, debug: boolean) {\n        this.debug = debug;\n        this.workers = [];\n        if (cluster.isMaster && !debug) {\n            this.runtMainWorker();\n\n            process.on('message', (message) => {\n                this.onMainMessage(message);\n            });\n\n            for (let i = 0; i < numWorker; i++) {\n                let w = cluster.fork();\n\n                w.on('message', (message) => {\n                    this.onWorkerMessage(message);\n                });\n\n                this.workers.push(w);\n            }\n        }else {\n            this.run();\n        }\n    }\n\n    onMainMessage(message) {\n        console.log(message);\n    }\n\n    onWorkerMessage(message) {\n        console.log(message);\n    }\n\n    runtMainWorker(){\n        const upnp = new Ssdp();\n        upnp.startBroadcast();\n\n        const rest = new RestServer();\n        rest.createServer();\n\n        const socket = new WebSocketServer(rest.getLog(), rest.getServer());\n        socket.startServer();\n\n        return rest;\n    }\n\n    run() {\n        const rest = new RestServer();\n        rest.createServer();\n        rest.listen(this);\n    }\n}\n\nnew Server(numCPUs, debug);\n\n\n\n\n"]}